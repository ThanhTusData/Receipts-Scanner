version: '3.8'
services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=receipts
      - DATA_DIR=/app/data
      - SENTRY_DSN=${SENTRY_DSN:-}
      - ENV=development
    ports:
      - "8080:8080"
    depends_on:
      - redis
      - minio
    volumes:
      - ./:/app:cached

  worker:
    build:
      context: .
      dockerfile: Dockerfile.api
    command: celery -A workers.celery_app.celery_app worker --loglevel=info -Q celery
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - S3_ENDPOINT=http://minio:9000
      - S3_ACCESS_KEY=minioadmin
      - S3_SECRET_KEY=minioadmin
      - S3_BUCKET=receipts
      - DATA_DIR=/app/data
      - WORKER_METRICS_PORT=8002
      - SENTRY_DSN=${SENTRY_DSN:-}
      - ENV=development
    depends_on:
      - redis
      - minio
    volumes:
      - ./:/app:cached
    ports:
      - "8002:8002"  # expose worker metrics

  ui:
    build:
      context: .
      dockerfile: Dockerfile.ui  # nếu bạn vẫn muốn Streamlit container
    ports:
      - "8501:8501"
    environment:
      - API_URL=http://api:8080
      - TESSERACT_CMD=/usr/bin/tesseract
      - ENV=development
    volumes:
      - ./:/app:cached
    depends_on:
      - api

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/alerts.yml:/etc/prometheus/alerts.yml:ro
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9090:9090"
    depends_on:
      - api
      - worker

  grafana:
    image: grafana/grafana:latest
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

volumes:
  minio_data:
  grafana_data:
